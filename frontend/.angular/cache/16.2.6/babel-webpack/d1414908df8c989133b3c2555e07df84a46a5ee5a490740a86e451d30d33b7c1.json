{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class DataSharingService {\n  constructor() {\n    this.dataSource = new BehaviorSubject(null);\n    this.currentData = this.dataSource.asObservable();\n  }\n  changeData(data) {\n    this.dataSource.next(data);\n  }\n  static #_ = this.ɵfac = function DataSharingService_Factory(t) {\n    return new (t || DataSharingService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataSharingService,\n    factory: DataSharingService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","DataSharingService","constructor","dataSource","currentData","asObservable","changeData","data","next","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\petri\\OneDrive\\Desktop\\pia projekat\\frontend\\src\\app\\service\\Datasharing\\data-sharing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataSharingService {\n  private dataSource = new BehaviorSubject<any>(null);\n  currentData = this.dataSource.asObservable();\n\n  constructor() { }\n\n  changeData(data: any) {\n    this.dataSource.next(data);\n  }\n}\n"],"mappings":"AACA,SAASA,eAAe,QAAQ,MAAM;;AAKtC,OAAM,MAAOC,kBAAkB;EAI7BC,YAAA;IAHQ,KAAAC,UAAU,GAAG,IAAIH,eAAe,CAAM,IAAI,CAAC;IACnD,KAAAI,WAAW,GAAG,IAAI,CAACD,UAAU,CAACE,YAAY,EAAE;EAE5B;EAEhBC,UAAUA,CAACC,IAAS;IAClB,IAAI,CAACJ,UAAU,CAACK,IAAI,CAACD,IAAI,CAAC;EAC5B;EAAC,QAAAE,CAAA,G;qBARUR,kBAAkB;EAAA;EAAA,QAAAS,EAAA,G;WAAlBT,kBAAkB;IAAAU,OAAA,EAAlBV,kBAAkB,CAAAW,IAAA;IAAAC,UAAA,EAFjB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}