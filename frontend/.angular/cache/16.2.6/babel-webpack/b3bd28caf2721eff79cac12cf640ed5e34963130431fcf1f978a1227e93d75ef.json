{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(username, password) {\n    const data = {\n      username: username,\n      password: password\n    };\n    return this.http.post(\"http://localhost:8080/users/login\", data);\n  }\n  register(data) {\n    return this.http.post(\"http://localhost:8080/users/register\", data);\n  }\n  getLoginRequests() {\n    return this.http.get(\"http://localhost:8080/users/login-requests\");\n  }\n  approveRequest(id) {\n    return this.http.get(`http://localhost:8080/users/approve-login-request/${id}`);\n  }\n  rejectRequest(id) {\n    return this.http.get(`http://localhost:8080/users/reject-login-request/${id}`);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["UserService","constructor","http","login","username","password","data","post","register","getLoginRequests","get","approveRequest","id","rejectRequest","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\petri\\OneDrive\\Desktop\\pia projekat\\frontend\\src\\app\\service\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { User } from '../entities/User';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  constructor(private http: HttpClient) { }\n\n  login(username: string, password: string){\n    const data={\n      username: username,\n      password: password\n    }\n    return this.http.post<User>(\"http://localhost:8080/users/login\", data)\n  }\n\n  register(data:any){\n    return this.http.post<User>(\"http://localhost:8080/users/register\", data)\n  }\n\n  getLoginRequests(){\n    return this.http.get<Array<User>>(\"http://localhost:8080/users/login-requests\")\n  }\n\n  approveRequest(id: Number){\n    return this.http.get<User>(`http://localhost:8080/users/approve-login-request/${id}`)\n  }\n\n  rejectRequest(id: Number){\n    return this.http.get<User>(`http://localhost:8080/users/reject-login-request/${id}`)\n  }\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,IAAI,GAAC;MACTF,QAAQ,EAAEA,QAAQ;MAClBC,QAAQ,EAAEA;KACX;IACD,OAAO,IAAI,CAACH,IAAI,CAACK,IAAI,CAAO,mCAAmC,EAAED,IAAI,CAAC;EACxE;EAEAE,QAAQA,CAACF,IAAQ;IACf,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAO,sCAAsC,EAAED,IAAI,CAAC;EAC3E;EAEAG,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAc,4CAA4C,CAAC;EACjF;EAEAC,cAAcA,CAACC,EAAU;IACvB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAO,qDAAqDE,EAAE,EAAE,CAAC;EACvF;EAEAC,aAAaA,CAACD,EAAU;IACtB,OAAO,IAAI,CAACV,IAAI,CAACQ,GAAG,CAAO,oDAAoDE,EAAE,EAAE,CAAC;EACtF;EAAC,QAAAE,CAAA,G;qBAzBUd,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAXnB,WAAW;IAAAoB,OAAA,EAAXpB,WAAW,CAAAqB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}