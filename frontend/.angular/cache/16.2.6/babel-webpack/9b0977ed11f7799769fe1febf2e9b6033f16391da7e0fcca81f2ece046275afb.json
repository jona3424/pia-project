{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/petri/OneDrive/Desktop/pia projekat/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { firstValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service/user.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(servis, router) {\n    this.servis = servis;\n    this.router = router;\n    this.username = \"\";\n    this.password = \"\";\n  }\n  login() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      //res can be  Users.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\n      //i want to do all checks before continueing\n      const res = yield firstValueFrom(_this.servis.login(_this.username, _this.password));\n      if (res.userId != 0) {\n        _this.router.navigate(['/home']);\n      } else {\n        alert(\"Invalid username or password\");\n      }\n    })();\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtext(0, \"Username: \");\n        i0.ɵɵelementStart(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.username = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"br\");\n        i0.ɵɵtext(3, \"\\nPassword: \");\n        i0.ɵɵelementStart(4, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"br\");\n        i0.ɵɵelementStart(6, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_button_click_6_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(7, \"Login\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngModel\", ctx.username);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n      }\n    },\n    dependencies: [i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["firstValueFrom","LoginComponent","constructor","servis","router","username","password","login","_this","_asyncToGenerator","res","userId","navigate","alert","_","i0","ɵɵdirectiveInject","i1","UserService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵtext","ɵɵelementStart","ɵɵlistener","LoginComponent_Template_input_ngModelChange_1_listener","$event","ɵɵelementEnd","ɵɵelement","LoginComponent_Template_input_ngModelChange_4_listener","LoginComponent_Template_button_click_6_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\petri\\OneDrive\\Desktop\\pia projekat\\frontend\\src\\app\\components\\login\\login.component.ts","C:\\Users\\petri\\OneDrive\\Desktop\\pia projekat\\frontend\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { firstValueFrom } from 'rxjs';\nimport { User } from 'src/app/entities/User';\nimport { UserService } from 'src/app/service/user.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  constructor(private servis: UserService,\n    private router: Router){}\n\n  username: string = \"\"\n  password: string = \"\"\n\n  async login(){\n    //res can be  Users.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());\n    //i want to do all checks before continueing\n    const res = await firstValueFrom(this.servis.login(this.username, this.password))\n    if(res.userId != 0){\n      this.router.navigate(['/home'])\n    }else{\n      alert(\"Invalid username or password\")\n    }\n\n  \n  }\n}\n","Username: <input type=\"text\" [(ngModel)]=\"username\">\n<br/>\nPassword: <input type=\"password\" [(ngModel)]=\"password\">\n<br/>\n<button (click)=\"login()\">Login</button>\n"],"mappings":";AAEA,SAASA,cAAc,QAAQ,MAAM;;;;;AAQrC,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,MAAmB,EAC7BC,MAAc;IADJ,KAAAD,MAAM,GAANA,MAAM;IAChB,KAAAC,MAAM,GAANA,MAAM;IAEhB,KAAAC,QAAQ,GAAW,EAAE;IACrB,KAAAC,QAAQ,GAAW,EAAE;EAHK;EAKpBC,KAAKA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT;MACA;MACA,MAAMC,GAAG,SAASV,cAAc,CAACQ,KAAI,CAACL,MAAM,CAACI,KAAK,CAACC,KAAI,CAACH,QAAQ,EAAEG,KAAI,CAACF,QAAQ,CAAC,CAAC;MACjF,IAAGI,GAAG,CAACC,MAAM,IAAI,CAAC,EAAC;QACjBH,KAAI,CAACJ,MAAM,CAACQ,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;OAChC,MAAI;QACHC,KAAK,CAAC,8BAA8B,CAAC;;IACtC;EAGH;EAAC,QAAAC,CAAA,G;qBAlBUb,cAAc,EAAAc,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAdpB,cAAc;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV3Bb,EAAA,CAAAe,MAAA,iBAAU;QAAAf,EAAA,CAAAgB,cAAA,eAA0C;QAAvBhB,EAAA,CAAAiB,UAAA,2BAAAC,uDAAAC,MAAA;UAAA,OAAAL,GAAA,CAAAxB,QAAA,GAAA6B,MAAA;QAAA,EAAsB;QAAzCnB,EAAA,CAAAoB,YAAA,EAA0C;QACpDpB,EAAA,CAAAqB,SAAA,SAAK;QACLrB,EAAA,CAAAe,MAAA,mBAAU;QAAAf,EAAA,CAAAgB,cAAA,eAA8C;QAAvBhB,EAAA,CAAAiB,UAAA,2BAAAK,uDAAAH,MAAA;UAAA,OAAAL,GAAA,CAAAvB,QAAA,GAAA4B,MAAA;QAAA,EAAsB;QAA7CnB,EAAA,CAAAoB,YAAA,EAA8C;QACxDpB,EAAA,CAAAqB,SAAA,SAAK;QACLrB,EAAA,CAAAgB,cAAA,gBAA0B;QAAlBhB,EAAA,CAAAiB,UAAA,mBAAAM,gDAAA;UAAA,OAAST,GAAA,CAAAtB,KAAA,EAAO;QAAA,EAAC;QAACQ,EAAA,CAAAe,MAAA,YAAK;QAAAf,EAAA,CAAAoB,YAAA,EAAS;;;QAJXpB,EAAA,CAAAwB,SAAA,GAAsB;QAAtBxB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAAxB,QAAA,CAAsB;QAElBU,EAAA,CAAAwB,SAAA,GAAsB;QAAtBxB,EAAA,CAAAyB,UAAA,YAAAX,GAAA,CAAAvB,QAAA,CAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}